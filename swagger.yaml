openapi: 3.0.0
info:
  title: Nexumed API - Work Order Upload
  version: 1.0.0
  description: |
    This API allows EMRs to send patient work order files to Nexumed for secure processing and device-specific routing.

    **Security**: All requests must be sent over HTTPS.

    ---
    **Endpoints Overview**:
    - `POST /api/receive-file`: Advanced file upload where the doctor's ID number (**drsID**) and procedure type are explicitly provided via query parameters.
    - `POST /api/receive-file-key`: Advanced file upload where the user's **API key** is explicitly provided via a query parameter, and the procedure type is automatically determined from the uploaded file.

servers:
  - url: https://api.nexumed.eu
    description: Production server
paths:
  # - `POST /api/work-order-emr`: Basic file upload where the procedure type is **determined automatically** from the file content.
  # /api/work-order-emr:
  #   post:
  #     summary: Upload work order file from EMR (procedure detected automatically)
  #     description: |
  #       This endpoint allows an EMR to send a patient work order file (XML, HL7, or GDT) to Nexumed for processing.

  #       **How it works:**
  #       - The uploaded file will be analyzed by Nexumed to automatically detect the procedure type (e.g., ECG, BP, etc.).
  #       - No need to specify the procedure manually.
  #       - Requires the `drsID` query parameter to identify the sending doctor or practice.

  #       **When to use this:**  
  #       Use this endpoint if your system cannot determine the procedure type in advance or prefers to leave routing decisions to Nexumed.

  #     parameters:
  #       - name: drsID
  #         in: query
  #         required: true
  #         description: Unique identifier for the doctor or practice sending the file
  #         schema:
  #           type: string
  #     requestBody:
  #       required: true
  #       content:
  #         multipart/form-data:
  #           schema:
  #             type: object
  #             required:
  #               - file
  #             properties:
  #               file:
  #                 type: string
  #                 format: binary
  #                 description: The medical file to upload (e.g., XML, HL7, GDT)
  #     responses:
  #       '200':
  #         description: File successfully uploaded
  #         content:
  #           application/json:
  #             schema:
  #               type: object
  #               properties:
  #                 message:
  #                   type: string
  #                   example: FROM_EMR route reached
  #       '400':
  #         description: Missing or invalid file or drsID
  #       '500':
  #         description: Internal server error
  

  /api/receive-file:
    post:
      summary: Upload work order file with explicit procedure routing
      description: |
        This endpoint allows an EMR to send a patient work order file (XML) to Nexumed **along with the intended procedure type** for direct routing to the appropriate device or service.

        **How it works:**
        - The `procedure` query parameter explicitly tells Nexumed what type of procedure this file represents (e.g., ECG, BP, Spiro, etc.).
        - This allows Nexumed to route the file immediately without analyzing its content.
        - Requires both the `drsID` and `procedure` query parameters.

        **When to use this:**  
        Use this endpoint if your system knows the procedure type in advance and you want faster, more direct routing.

      parameters:
        - name: drsID
          in: query
          required: true
          description: Unique identifier for the doctor or practice sending the file
          schema:
            type: string
        - name: procedure
          in: query
          required: true
          description: Type of medical procedure to route the file to
          schema:
            type: string
            enum: [ECG, BP, Spiro, SPO2, TEMP, RR, HR]
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              required:
                - file
              properties:
                file:
                  type: string
                  format: binary
                  description: The medical file to upload
      responses:
        '200':
          description: File successfully uploaded
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: File successfully uploaded
        '400':
          description: Bad request (missing procedure, drsID, or file)
        '500':
          description: Internal server error

  /api/receive-file-key:
    post:
      summary: Upload work order file using API key (procedure detected automatically)
      description: |
        This endpoint allows an EMR to send a patient work order file (XML) to Nexumed for processing.

        **How it works:**
        - The client must pass the `apiKey` as a query parameter.
        - The uploaded XML file will be analyzed by Nexumed to automatically detect the procedure type (ECG, BP, Spiro, etc.).
        - The file is securely stored and routed to the correct device or service.

        **When to use this:**
        Use this endpoint if your system already has an assigned **API key** and you want Nexumed to automatically determine the correct procedure type based on the file's contents.

      parameters:
        - name: apiKey
          in: query
          required: true
          description: Unique API key provided by Nexumed for authenticating the sender
          schema:
            type: string
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              required:
                - file
              properties:
                file:
                  type: string
                  format: binary
                  description: The medical file to upload (XML)
      responses:
        '200':
          description: File successfully uploaded and routed
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: File successfully uploaded
                  procedure:
                    type: string
                    example: ECG
        '400':
          description: Bad request (missing apiKey, invalid file, etc.)
        '401':
          description: Unauthorized (invalid or missing API key)
        '500':
          description: Internal server error

